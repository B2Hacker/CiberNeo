@model CiberNeo.Models.Archivo

@{
    ViewBag.Title = "Archivos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/Scripts/bootbox.min.js"></script>

<h2>Archivos</h2>

@using (Html.BeginForm("Archivos", "Productos", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <hr/>
    <h5>Archivos adjuntos</h5>

    using (Html.BeginForm("EliminarArchivo", "Productos", FormMethod.Post, new {id = "formArchivos"}))
    {
        <input type="hidden" value="0" id="IdArchivo" name="IdArchivo" />
        <table class="table table-striped table-bordered">
               <thead>
                   <tr>
                       <th>Tipo</th>
                       <th>Titulo</th>
                       <th>Detalles</th>
                       <th></th>
                   </tr>
               </thead>
               <tbody>
                   @foreach (var item in ViewBag.Archivos)
                   {
                       <tr>
                           <td>@item.Tipo</td>
                           <td>
                               <a href="@Url.Content(item.Url)" target="_blank"> @item.Titulo</a>
                           </td>
                           <td>@item.Detalles</td>
                           <td><input type="button" data-id="@item.IdArchivo" class="btn btn-danger eliminar" value="Eliminar" /></td>
                       </tr>
                   }
               </tbody>
         </table>
    }
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Archivo</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
       @Html.HiddenFor(x => x.IdProducto)

        <div class="form-group">
            @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Detalles, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Detalles, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Detalles, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tipo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="Tipo" name="Tipo" class="form-control">
                    <option value="imagen">Imagen</option>
                    <option value="pdf">PDF</option>
                    <option value="doc">DOC</option>
                    @Html.ValidationMessageFor(model => model.Tipo, "", new { @class = "text-danger" })
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Url, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               <input type="hidden" id="url" name="Url" value="NA" />
                <input type="file" id="Documento" name="Documento" class="form-control"/>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    (document).ready(function () {
        $('.eliminar').click(dunction() {
            var ida = $(this).data('id');
            bootbox.confirm({
                message: "confirma eliminar el archivo seleccionado?",
                buttons: {
                    confirm: {
                        label: 'Yes',
                        className: 'btn-danger'
                    }
                },
                callback: function (result) {
                    if (result) {
                        $('#IdArchivo').val(ida);
                        window.formArchivos.submit();
                    }
                }
            });
        });
    });
</script>
